/*
 * 微信协议 API
 * 说明 [http://swagger.io](http://swagger.io)  swagger [22222](http://swagger.io/irc/). key `123` to test .
 *
 * OpenAPI spec version: 1.0.0
 * Contact: admin@wxipad.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.wx.demo.wechatapi.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

import java.util.Arrays;
import java.util.Objects;

/**
 * 封包,解包数据参数
 */
@ApiModel(description = "封包,解包数据参数")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2019-02-19T11:20:13.430Z")
public class UtilBase {
  @SerializedName("CmdUrl")
  private String cmdUrl = null;

  @SerializedName("LongHost")
  private String longHost = null;

  @SerializedName("LongHead")
  private byte[] longHead = null;

  @SerializedName("Cmd")
  private Integer cmd = null;

  @SerializedName("PayLoads")
  private byte[] payLoads = null;

  @SerializedName("Playloadextend")
  private byte[] playloadextend = null;

  @SerializedName("Ret")
  private Integer ret = null;

  @SerializedName("ShortHost")
  private String shortHost = null;

  @SerializedName("user")
  private UtilUser user = null;

  public UtilBase cmdUrl(String cmdUrl) {
    this.cmdUrl = cmdUrl;
    return this;
  }

   /**
   * 微信短链接接口地址
   * @return cmdUrl
  **/
  @ApiModelProperty(value = "微信短链接接口地址")
  public String getCmdUrl() {
    return cmdUrl;
  }

  public void setCmdUrl(String cmdUrl) {
    this.cmdUrl = cmdUrl;
  }

  public UtilBase longHost(String longHost) {
    this.longHost = longHost;
    return this;
  }

   /**
   * 微信长连接地址
   * @return longHost
  **/
  @ApiModelProperty(value = "微信长连接地址")
  public String getLongHost() {
    return longHost;
  }

  public void setLongHost(String longHost) {
    this.longHost = longHost;
  }

  public UtilBase longHead(byte[] longHead) {
    this.longHead = longHead;
    return this;
  }

   /**
   * 长连接头部数据
   * @return longHead
  **/
  @ApiModelProperty(value = "长连接头部数据")
  public byte[] getLongHead() {
    return longHead;
  }

  public void setLongHead(byte[] longHead) {
    this.longHead = longHead;
  }

  public UtilBase cmd(Integer cmd) {
    this.cmd = cmd;
    return this;
  }

   /**
   * 接口id
   * @return cmd
  **/
  @ApiModelProperty(value = "接口id")
  public Integer getCmd() {
    return cmd;
  }

  public void setCmd(Integer cmd) {
    this.cmd = cmd;
  }

  public UtilBase payLoads(byte[] payLoads) {
    this.payLoads = payLoads;
    return this;
  }

   /**
   * 参数或数据
   * @return payLoads
  **/
  @ApiModelProperty(value = "参数或数据")
  public byte[] getPayLoads() {
    return payLoads;
  }

  public void setPayLoads(byte[] payLoads) {
    this.payLoads = payLoads;
  }

  public UtilBase playloadextend(byte[] playloadextend) {
    this.playloadextend = playloadextend;
    return this;
  }

   /**
   * 附加参数或数据
   * @return playloadextend
  **/
  @ApiModelProperty(value = "附加参数或数据")
  public byte[] getPlayloadextend() {
    return playloadextend;
  }

  public void setPlayloadextend(byte[] playloadextend) {
    this.playloadextend = playloadextend;
  }

  public UtilBase ret(Integer ret) {
    this.ret = ret;
    return this;
  }

   /**
   * 状态码
   * @return ret
  **/
  @ApiModelProperty(value = "状态码")
  public Integer getRet() {
    return ret;
  }

  public void setRet(Integer ret) {
    this.ret = ret;
  }

  public UtilBase shortHost(String shortHost) {
    this.shortHost = shortHost;
    return this;
  }

   /**
   * 微信短连接地址
   * @return shortHost
  **/
  @ApiModelProperty(value = "微信短连接地址")
  public String getShortHost() {
    return shortHost;
  }

  public void setShortHost(String shortHost) {
    this.shortHost = shortHost;
  }

  public UtilBase user(UtilUser user) {
    this.user = user;
    return this;
  }

   /**
   * 微信号的结构体
   * @return user
  **/
  @ApiModelProperty(value = "微信号的结构体")
  public UtilUser getUser() {
    return user;
  }

  public void setUser(UtilUser user) {
    this.user = user;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UtilBase utilBase = (UtilBase) o;
    return Objects.equals(this.cmdUrl, utilBase.cmdUrl) &&
        Objects.equals(this.longHost, utilBase.longHost) &&
        Arrays.equals(this.longHead, utilBase.longHead) &&
        Objects.equals(this.cmd, utilBase.cmd) &&
        Arrays.equals(this.payLoads, utilBase.payLoads) &&
        Arrays.equals(this.playloadextend, utilBase.playloadextend) &&
        Objects.equals(this.ret, utilBase.ret) &&
        Objects.equals(this.shortHost, utilBase.shortHost) &&
        Objects.equals(this.user, utilBase.user);
  }

  @Override
  public int hashCode() {
    return Objects.hash(cmdUrl, longHost, Arrays.hashCode(longHead), cmd, Arrays.hashCode(payLoads), Arrays.hashCode(playloadextend), ret, shortHost, user);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UtilBase {\n");

    sb.append("    cmdUrl: ").append(toIndentedString(cmdUrl)).append("\n");
    sb.append("    longHost: ").append(toIndentedString(longHost)).append("\n");
    sb.append("    longHead: ").append(toIndentedString(longHead)).append("\n");
    sb.append("    cmd: ").append(toIndentedString(cmd)).append("\n");
    sb.append("    payLoads: ").append(toIndentedString(payLoads)).append("\n");
    sb.append("    playloadextend: ").append(toIndentedString(playloadextend)).append("\n");
    sb.append("    ret: ").append(toIndentedString(ret)).append("\n");
    sb.append("    shortHost: ").append(toIndentedString(shortHost)).append("\n");
    sb.append("    user: ").append(toIndentedString(user)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

