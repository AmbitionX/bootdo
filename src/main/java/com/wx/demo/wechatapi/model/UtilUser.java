/*
 * 微信协议 API
 * 说明 [http://swagger.io](http://swagger.io)  swagger [22222](http://swagger.io/irc/). key `123` to test .
 *
 * OpenAPI spec version: 1.0.0
 * Contact: admin@wxipad.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.wx.demo.wechatapi.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

import java.util.Arrays;
import java.util.Objects;

/**
 * 微信数据参数
 */
@ApiModel(description = "微信数据参数")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2019-02-19T11:20:13.430Z")
public class UtilUser {
  @SerializedName("SessionKey")
  private byte[] sessionKey = null;

  @SerializedName("DeviceId")
  private String deviceId = null;

  @SerializedName("MaxSyncKey")
  private byte[] maxSyncKey = null;

  @SerializedName("Uin")
  private Integer uin = null;

  @SerializedName("AutoAuthKey")
  private byte[] autoAuthKey = null;

  @SerializedName("Cookies")
  private byte[] cookies = null;

  @SerializedName("CurrentsyncKey")
  private byte[] currentsyncKey = null;

  @SerializedName("DeviceName")
  private String deviceName = null;

  @SerializedName("DeviceType")
  private String deviceType = null;

  @SerializedName("UserName")
  private String userName = null;

  @SerializedName("UserExt")
  private byte[] userExt = null;

  @SerializedName("NickName")
  private byte[] nickName = null;

  public UtilUser sessionKey(byte[] sessionKey) {
    this.sessionKey = sessionKey;
    return this;
  }

   /**
   * 微信号封包解包key
   * @return sessionKey
  **/
  @ApiModelProperty(value = "微信号封包解包key")
  public byte[] getSessionKey() {
    return sessionKey;
  }

  public void setSessionKey(byte[] sessionKey) {
    this.sessionKey = sessionKey;
  }

  public UtilUser deviceId(String deviceId) {
    this.deviceId = deviceId;
    return this;
  }

   /**
   * 微信登陆设备ID
   * @return deviceId
  **/
  @ApiModelProperty(value = "微信登陆设备ID")
  public String getDeviceId() {
    return deviceId;
  }

  public void setDeviceId(String deviceId) {
    this.deviceId = deviceId;
  }

  public UtilUser maxSyncKey(byte[] maxSyncKey) {
    this.maxSyncKey = maxSyncKey;
    return this;
  }

   /**
   * 微信同步消息key
   * @return maxSyncKey
  **/
  @ApiModelProperty(value = "微信同步消息key")
  public byte[] getMaxSyncKey() {
    return maxSyncKey;
  }

  public void setMaxSyncKey(byte[] maxSyncKey) {
    this.maxSyncKey = maxSyncKey;
  }

  public UtilUser uin(Integer uin) {
    this.uin = uin;
    return this;
  }

   /**
   * 微信uid
   * @return uin
  **/
  @ApiModelProperty(value = "微信uid")
  public Integer getUin() {
    return uin;
  }

  public void setUin(Integer uin) {
    this.uin = uin;
  }

  public UtilUser autoAuthKey(byte[] autoAuthKey) {
    this.autoAuthKey = autoAuthKey;
    return this;
  }

   /**
   * 微信登录key
   * @return autoAuthKey
  **/
  @ApiModelProperty(value = "微信登录key")
  public byte[] getAutoAuthKey() {
    return autoAuthKey;
  }

  public void setAutoAuthKey(byte[] autoAuthKey) {
    this.autoAuthKey = autoAuthKey;
  }

  public UtilUser cookies(byte[] cookies) {
    this.cookies = cookies;
    return this;
  }

   /**
   * Cookies
   * @return cookies
  **/
  @ApiModelProperty(value = "Cookies")
  public byte[] getCookies() {
    return cookies;
  }

  public void setCookies(byte[] cookies) {
    this.cookies = cookies;
  }

  public UtilUser currentsyncKey(byte[] currentsyncKey) {
    this.currentsyncKey = currentsyncKey;
    return this;
  }

   /**
   * CurrentsyncKey
   * @return currentsyncKey
  **/
  @ApiModelProperty(value = "CurrentsyncKey")
  public byte[] getCurrentsyncKey() {
    return currentsyncKey;
  }

  public void setCurrentsyncKey(byte[] currentsyncKey) {
    this.currentsyncKey = currentsyncKey;
  }

  public UtilUser deviceName(String deviceName) {
    this.deviceName = deviceName;
    return this;
  }

   /**
   * 微信硬件设备名字
   * @return deviceName
  **/
  @ApiModelProperty(value = "微信硬件设备名字")
  public String getDeviceName() {
    return deviceName;
  }

  public void setDeviceName(String deviceName) {
    this.deviceName = deviceName;
  }

  public UtilUser deviceType(String deviceType) {
    this.deviceType = deviceType;
    return this;
  }

   /**
   * 微信硬件设备类型
   * @return deviceType
  **/
  @ApiModelProperty(value = "微信硬件设备类型")
  public String getDeviceType() {
    return deviceType;
  }

  public void setDeviceType(String deviceType) {
    this.deviceType = deviceType;
  }

  public UtilUser userName(String userName) {
    this.userName = userName;
    return this;
  }

   /**
   * 微信号
   * @return userName
  **/
  @ApiModelProperty(value = "微信号")
  public String getUserName() {
    return userName;
  }

  public void setUserName(String userName) {
    this.userName = userName;
  }

  public UtilUser userExt(byte[] userExt) {
    this.userExt = userExt;
    return this;
  }

   /**
   * 微信状态
   * @return userExt
  **/
  @ApiModelProperty(value = "微信状态")
  public byte[] getUserExt() {
    return userExt;
  }

  public void setUserExt(byte[] userExt) {
    this.userExt = userExt;
  }

  public UtilUser nickName(byte[] nickName) {
    this.nickName = nickName;
    return this;
  }

   /**
   * 微信昵称
   * @return nickName
  **/
  @ApiModelProperty(value = "微信昵称")
  public byte[] getNickName() {
    return nickName;
  }

  public void setNickName(byte[] nickName) {
    this.nickName = nickName;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UtilUser utilUser = (UtilUser) o;
    return Arrays.equals(this.sessionKey, utilUser.sessionKey) &&
        Objects.equals(this.deviceId, utilUser.deviceId) &&
        Arrays.equals(this.maxSyncKey, utilUser.maxSyncKey) &&
        Objects.equals(this.uin, utilUser.uin) &&
        Arrays.equals(this.autoAuthKey, utilUser.autoAuthKey) &&
        Arrays.equals(this.cookies, utilUser.cookies) &&
        Arrays.equals(this.currentsyncKey, utilUser.currentsyncKey) &&
        Objects.equals(this.deviceName, utilUser.deviceName) &&
        Objects.equals(this.deviceType, utilUser.deviceType) &&
        Objects.equals(this.userName, utilUser.userName) &&
        Arrays.equals(this.userExt, utilUser.userExt) &&
        Arrays.equals(this.nickName, utilUser.nickName);
  }

  @Override
  public int hashCode() {
    return Objects.hash(Arrays.hashCode(sessionKey), deviceId, Arrays.hashCode(maxSyncKey), uin, Arrays.hashCode(autoAuthKey), Arrays.hashCode(cookies), Arrays.hashCode(currentsyncKey), deviceName, deviceType, userName, Arrays.hashCode(userExt), Arrays.hashCode(nickName));
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UtilUser {\n");

    sb.append("    sessionKey: ").append(toIndentedString(sessionKey)).append("\n");
    sb.append("    deviceId: ").append(toIndentedString(deviceId)).append("\n");
    sb.append("    maxSyncKey: ").append(toIndentedString(maxSyncKey)).append("\n");
    sb.append("    uin: ").append(toIndentedString(uin)).append("\n");
    sb.append("    autoAuthKey: ").append(toIndentedString(autoAuthKey)).append("\n");
    sb.append("    cookies: ").append(toIndentedString(cookies)).append("\n");
    sb.append("    currentsyncKey: ").append(toIndentedString(currentsyncKey)).append("\n");
    sb.append("    deviceName: ").append(toIndentedString(deviceName)).append("\n");
    sb.append("    deviceType: ").append(toIndentedString(deviceType)).append("\n");
    sb.append("    userName: ").append(toIndentedString(userName)).append("\n");
    sb.append("    userExt: ").append(toIndentedString(userExt)).append("\n");
    sb.append("    nickName: ").append(toIndentedString(nickName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

