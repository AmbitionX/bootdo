/*
 * 微信协议 API
 * 说明 [http://swagger.io](http://swagger.io)  swagger [22222](http://swagger.io/irc/). key `123` to test .
 *
 * OpenAPI spec version: 1.0.0
 * Contact: admin@wxipad.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.wx.demo.wechatapi.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

import java.util.Objects;

/**
 * 附加参数
 */
@ApiModel(description = "附加参数")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2019-02-19T11:20:13.430Z")
public class ExtraData {
  @SerializedName("PayLoads")
  private String payLoads = null;

  @SerializedName("RedisBean")
  private String redisBean = null;

  @SerializedName("amount")
  private Integer amount = null;

  @SerializedName("longServerHost")
  private String longServerHost = null;

  @SerializedName("shortServerHost")
  private String shortServerHost = null;

  @SerializedName("serverid")
  private String serverid = null;

  @SerializedName("orderId")
  private String orderId = null;

  @SerializedName("nickname")
  private String nickname = null;

  @SerializedName("username")
  private String username = null;

  @SerializedName("password")
  private String password = null;

  @SerializedName("loginType")
  private String loginType = null;

  @SerializedName("data")
  private String data = null;

  @SerializedName("user")
  private UtilUser user = null;

  public ExtraData payLoads(String payLoads) {
    this.payLoads = payLoads;
    return this;
  }

   /**
   * wechatMsg消息体的参数数据
   * @return payLoads
  **/
  @ApiModelProperty(value = "wechatMsg消息体的参数数据")
  public String getPayLoads() {
    return payLoads;
  }

  public void setPayLoads(String payLoads) {
    this.payLoads = payLoads;
  }

  public ExtraData redisBean(String redisBean) {
    this.redisBean = redisBean;
    return this;
  }

   /**
   * Redis 数据库里的数据结构（主要用来二次登录或者断线重连）
   * @return redisBean
  **/
  @ApiModelProperty(value = "Redis 数据库里的数据结构（主要用来二次登录或者断线重连）")
  public String getRedisBean() {
    return redisBean;
  }

  public void setRedisBean(String redisBean) {
    this.redisBean = redisBean;
  }

  public ExtraData amount(Integer amount) {
    this.amount = amount;
    return this;
  }

  /**
   * wxString
   * @return redisBean
   **/
  @ApiModelProperty(value = "wxString")
  public String getData() {
    return data;
  }

  public void setData(String data) {
    this.data = data;
  }

  public ExtraData data(String data) {
    this.data = data;
    return this;
  }

  /**
   * 登录类型
   * @return redisBean
  **/
  @ApiModelProperty(value = "登录类型")
  public String getLoginType() {
    return loginType;
  }

  public void setLoginType(String loginType) {
    this.loginType = loginType;
  }

  public ExtraData loginType(String loginType) {
    this.loginType = loginType;
    return this;
  }

   /**
   * 金额，单位：分
   * @return amount
  **/
  @ApiModelProperty(value = "金额，单位：分")
  public Integer getAmount() {
    return amount;
  }

  public void setAmount(Integer amount) {
    this.amount = amount;
  }

  public ExtraData longServerHost(String longServerHost) {
    this.longServerHost = longServerHost;
    return this;
  }

   /**
   * 微信服务器的长连接地址
   * @return longServerHost
  **/
  @ApiModelProperty(value = "微信服务器的长连接地址")
  public String getLongServerHost() {
    return longServerHost;
  }

  public void setLongServerHost(String longServerHost) {
    this.longServerHost = longServerHost;
  }

  public ExtraData shortServerHost(String shortServerHost) {
    this.shortServerHost = shortServerHost;
    return this;
  }

   /**
   * 微信服务器的短连接地址
   * @return shortServerHost
  **/
  @ApiModelProperty(value = "微信服务器的短连接地址")
  public String getShortServerHost() {
    return shortServerHost;
  }

  public void setShortServerHost(String shortServerHost) {
    this.shortServerHost = shortServerHost;
  }

  public ExtraData serverid(String serverid) {
    this.serverid = serverid;
    return this;
  }

   /**
   * 后端服务器ID
   * @return serverid
  **/
  @ApiModelProperty(value = "后端服务器ID")
  public String getServerid() {
    return serverid;
  }

  public void setServerid(String serverid) {
    this.serverid = serverid;
  }

  public ExtraData orderId(String orderId) {
    this.orderId = orderId;
    return this;
  }

   /**
   * 订单号,即微信收款备注
   * @return orderId
  **/
  @ApiModelProperty(value = "订单号,即微信收款备注")
  public String getOrderId() {
    return orderId;
  }

  public void setOrderId(String orderId) {
    this.orderId = orderId;
  }

  public ExtraData nickname(String nickname) {
    this.nickname = nickname;
    return this;
  }

   /**
   * 微信号昵称
   * @return nickname
  **/
  @ApiModelProperty(value = "微信号昵称")
  public String getNickname() {
    return nickname;
  }

  public void setNickname(String nickname) {
    this.nickname = nickname;
  }

  public ExtraData username(String username) {
    this.username = username;
    return this;
  }

   /**
   * 微信号，wxid，手机号，QQ号，邮箱之类的用来登录微信的账号
   * @return username
  **/
  @ApiModelProperty(value = "微信号，wxid，手机号，QQ号，邮箱之类的用来登录微信的账号")
  public String getUsername() {
    return username;
  }

  public void setUsername(String username) {
    this.username = username;
  }

  public ExtraData password(String password) {
    this.password = password;
    return this;
  }

   /**
   * 微信号密码
   * @return password
  **/
  @ApiModelProperty(value = "微信号密码")
  public String getPassword() {
    return password;
  }

  public void setPassword(String password) {
    this.password = password;
  }

  public ExtraData user(UtilUser user) {
    this.user = user;
    return this;
  }

   /**
   * 微信号的数据结构体
   * @return user
  **/
  @ApiModelProperty(value = "微信号的数据结构体")
  public UtilUser getUser() {
    return user;
  }

  public void setUser(UtilUser user) {
    this.user = user;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ExtraData extraData = (ExtraData) o;
    return Objects.equals(this.payLoads, extraData.payLoads) &&
        Objects.equals(this.redisBean, extraData.redisBean) &&
        Objects.equals(this.amount, extraData.amount) &&
        Objects.equals(this.longServerHost, extraData.longServerHost) &&
        Objects.equals(this.shortServerHost, extraData.shortServerHost) &&
        Objects.equals(this.serverid, extraData.serverid) &&
        Objects.equals(this.orderId, extraData.orderId) &&
        Objects.equals(this.nickname, extraData.nickname) &&
        Objects.equals(this.username, extraData.username) &&
        Objects.equals(this.password, extraData.password) &&
        Objects.equals(this.user, extraData.user);
  }

  @Override
  public int hashCode() {
    return Objects.hash(payLoads, redisBean, amount, longServerHost, shortServerHost, serverid, orderId, nickname, username, password, user);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ExtraData {\n");

    sb.append("    payLoads: ").append(toIndentedString(payLoads)).append("\n");
    sb.append("    redisBean: ").append(toIndentedString(redisBean)).append("\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("    longServerHost: ").append(toIndentedString(longServerHost)).append("\n");
    sb.append("    shortServerHost: ").append(toIndentedString(shortServerHost)).append("\n");
    sb.append("    serverid: ").append(toIndentedString(serverid)).append("\n");
    sb.append("    orderId: ").append(toIndentedString(orderId)).append("\n");
    sb.append("    nickname: ").append(toIndentedString(nickname)).append("\n");
    sb.append("    username: ").append(toIndentedString(username)).append("\n");
    sb.append("    password: ").append(toIndentedString(password)).append("\n");
    sb.append("    user: ").append(toIndentedString(user)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

